name: Update Playoff Stats

on:
  schedule:
    # Run during NFL playoff season (January-February)
    # 8 AM ET = 13:00 UTC (during EST) or 12:00 UTC (during EDT)
    # Running at 13:00 UTC to cover both timezone scenarios
    - cron: '0 13 * 1-2 0'   # Sundays at 1:00 PM UTC in Jan-Feb
    - cron: '0 13 * 1-2 1'   # Mondays at 1:00 PM UTC in Jan-Feb 
    - cron: '0 13 * 1-2 2'   # Tuesdays at 1:00 PM UTC in Jan-Feb
  workflow_dispatch:         # Allow manual trigger

jobs:
  scrape-and-update:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # Required for pushing changes

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run scraper
        run: python scripts/scraper.py
        continue-on-error: false  # Fail the workflow if scraper fails
        
      - name: Check for changes
        id: changes
        run: |
          git diff --name-only
          if git diff --quiet Data/playerStats.js; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.changes.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Data/playerStats.js
          git commit -m "🏈 Auto-update playoff stats - $(date +'%Y-%m-%d %H:%M UTC')"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: No changes detected
        if: steps.changes.outputs.changed == 'false'
        run: echo "No changes detected in playerStats.js - skipping commit"
        
      - name: Display scraping summary
        if: always()  # Run even if previous steps failed
        run: |
          echo "📊 Scraping Summary:"
          echo "Changed: ${{ steps.changes.outputs.changed }}"
          if [ -f Data/playerStats.js ]; then
            echo "File size: $(wc -c < Data/playerStats.js) bytes"
            echo "Last modified: $(stat -c %y Data/playerStats.js 2>/dev/null || echo 'unknown')"
          else
            echo "❌ playerStats.js not found!"
          fi
          if [ -f Data/playerStats.js ]; then
            echo "File size: $(wc -c < Data/playerStats.js) bytes"
            echo "Last modified: $(stat -c %y Data/playerStats.js 2>/dev/null || stat -f %Sm Data/playerStats.js 2>/dev/null || echo 'unknown')"
          else
            echo "❌ playerStats.js not found!"
          fi
